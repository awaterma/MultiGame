<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" creationComplete="email.setFocus()" currentState="register">
    <mx:ArrayCollection id="agentList">
        <mx:Object label="Random" data="RANDOM"/>
        <mx:Object label="Blocker" data="BLOCKER"/>
        <mx:Object label="Simple" data="SIMPLE"/>
    	<mx:Object label="Human" data="HUMAN"/>                       
    </mx:ArrayCollection>
    <mx:ArrayCollection id="gameList">
    	<mx:Object label="GENTE" data="gente"/>
    </mx:ArrayCollection>
    <mx:RemoteObject id="gameService" destination="gameService" result="resultHandler(event)" fault="faultHandler(event)" />
	<mx:states>
	    <mx:State name="register">
	       <mx:AddChild>
			    <mx:Panel title="Join Game gg">
			        <mx:Form x="0" y="0" defaultButton="{playBtn}" id="form">
			            <mx:FormItem label="Name:" required="true">
			                <mx:TextInput id="email" />
			            </mx:FormItem>
			            <mx:FormItem label="Game:">
	                    	<mx:ComboBox id="gametype" dataProvider="{gameList}"/>
			            </mx:FormItem>
			            <mx:FormItem label="Setup:">
			            	<mx:RadioButton label="Default" selected="true" click="switchState(event)"/>
			                <mx:RadioButton label="Custom" id="robots" selected="false" click="switchState(event)" />
			            </mx:FormItem>
			        </mx:Form>
			        <mx:Form>
			            <mx:FormItem>
			                <mx:HBox width="80%">
			                    <mx:Button id="playBtn" label="Play" click="doRegister(event)" />
			                </mx:HBox>
			            </mx:FormItem>
			        </mx:Form>
			    </mx:Panel>
	       </mx:AddChild>
	    </mx:State>
		<mx:State name="ai" basedOn="register">
			<mx:AddChild relativeTo="{form}" position="lastChild">
	                <mx:FormItem label="Player 2">
	                    <mx:ComboBox id="player2" dataProvider="{agentList}"/>
	                </mx:FormItem>
	            </mx:AddChild>
	            <mx:AddChild relativeTo="{form}" position="lastChild">
	                <mx:FormItem label="Player 3">
	                    <mx:ComboBox id="player3" dataProvider="{agentList}"/>
	                </mx:FormItem>
	            </mx:AddChild>
	            <mx:AddChild relativeTo="{form}" position="lastChild">
	                <mx:FormItem label="Player 4">
	                    <mx:ComboBox id="player4" dataProvider="{agentList}"/>
	                </mx:FormItem>
	            </mx:AddChild>
		</mx:State>
	</mx:states>

	<mx:Metadata>
        [Event(name="complete")]
    </mx:Metadata>

	<mx:Script> 
        <![CDATA[

        	import mx.collections.ArrayCollection;
        	import mx.rpc.events.FaultEvent;
        	import mx.rpc.events.ResultEvent;
            import flash.events.MouseEvent;
            import mx.controls.Alert;
            import mx.utils.StringUtil;
            import mx.ecosur.multigame.entity.Player;
            import mx.ecosur.multigame.entity.GamePlayer;
            import mx.ecosur.multigame.entity.Game;
            import mx.ecosur.multigame.enum.Color;
            import mx.ecosur.multigame.enum.PenteStrategy;
            
            public var currentPlayer:GamePlayer;
            public var players:ArrayCollection;
            public var gameType:String;
            public var game:Game;
    
            private function doRegister(eventObj:MouseEvent):void {
            	
            	//validate form
            	if (StringUtil.trim(email.text).length == 0){
            		Alert.show("Please insert your name", "Data incomplete");
            		email.setFocus();
            		return;	
            	}
            	
            	var player:Player = null;
            	var call:Object = null;
            	
                /* Only one game type exists */
                gameType = "PENTE";
            	
            	if (this.currentState=='ai') {
                    player = new Player();
                    player.name = email.text;
                    
                    var strategies:Array = [ player2.selectedItem.data, 
                        player3.selectedItem.data, player4.selectedItem.data ];
                   
            	    call = gameService.registerPlayerAndAI (player,
            	       Color.UNKNOWN, gameType, strategies);
            	       	
            	} else {            		
	            	/* Simple player registration */
	            	
	            	player = new Player();
	            	player.name = email.text;	            	
	            	call = gameService.registerPlayer(player, Color.UNKNOWN, gameType);
	            }
	            
	            call.operation = "register";
	            
            }
            
            private function doCreateUser (eventObj:MouseEvent):void {
            	
            }
            
            private function resultHandler(event:ResultEvent):void{
            	var call:Object = event.token;
            	if(call.operation == "register"){
            		currentPlayer = GamePlayer(event.result);
            		dispatchEvent(new Event("complete"));
                } else if (call.operation == "unregisterAll"){
            		Alert.show("All unregistered");
            	}
            }   
                        
            private function faultHandler(event:FaultEvent):void{
            	//TODO:Tempory fix to remove players from a game
            	var i:int = event.fault.faultString.indexOf("game full"); 
            	if (i > -1){
            		Alert.show(event.fault.faultString.substring(i, event.fault.faultString.length), "Registration failed");
            		if (event.token.operation != "unregisterAll"){
            			var call:Object = gameService.unregisterAllPlayers("PENTE");
            			call.operation= "unregisterAll";
            		}
            	}else{
            		Alert.show(event.fault.faultString, "Error");
            	}
            }
            
            private function switchState(event:Event):void {
            	if (robots.selected) {
            		this.currentState="ai";
            	} else {
            		this.currentState="register";
            	}
            }
        ]]>
    </mx:Script>
</mx:Box>
