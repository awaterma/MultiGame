<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:component="mx.ecosur.multigame.component.*" 
    xmlns:manantiales="mx.ecosur.multigame.manantiales.*" 
    xmlns:token="mx.ecosur.multigame.manantiales.token.*"
    width="100%" height="100%" creationComplete="init()" remove="destroy()">
    
    <mx:Metadata>
        [Event(name="complete")]
    </mx:Metadata>
    
    <mx:Script> 
        <![CDATA[
            import mx.ecosur.multigame.manantiales.entity.ManantialesGame;
            import mx.ecosur.multigame.manantiales.entity.ManantialesPlayer;
            import mx.managers.PopUpManager;
            import mx.managers.CursorManager;
            import mx.events.MenuEvent;
            import mx.ecosur.multigame.component.HelpPanel;
            import mx.ecosur.multigame.entity.GamePlayer;
            import mx.ecosur.multigame.manantiales.enum.Mode;
            
            private var _controller:ManantialesGameController;
            protected var _currentPlayer:GamePlayer;
            protected var _currentGame:ManantialesGame;
            private var _helpPanel:HelpPanel; 
        
            public function init():void {
                if (_controller == null)
                    _controller = new ManantialesGameController(this);
                CursorManager.removeBusyCursor();

            }
            
            public function destroy():void{
                if (_controller != null)
                    _controller.destroy();
            }

            public function set currentGame (currentGame:ManantialesGame):void {
                _currentGame = currentGame;
            }

            public function get currentGame ():ManantialesGame {
                return _currentGame;
            }
            
            public function set currentPlayer(currentPlayer:GamePlayer):void{
                _currentPlayer = currentPlayer;
            }
            
            [Bindable]
            public function get currentPlayer():GamePlayer{
                return _currentPlayer;
            }

            public function get activePlayer ():ManantialesPlayer {
                var ret:ManantialesPlayer;
                for (var i:int = 0; i < _currentGame.players.length; i++) {
                    var p:GamePlayer = _currentGame.players [ i ];
                    if (p.turn) {
                        ret = ManantialesPlayer(p);
                        break;
                    }
                }

                return ret;
            }
            
            public function dispatchCompletion ():void {
                this.dispatchEvent(new Event("complete"));
            }
            
            /* Only events that effect this container are handled, all others
               relevent to application lifecycle should be listend to by 
               Parent containers (event-bubbling) */
            private function handleMenuItemClick(evt:MenuEvent):void { 
                if (evt.label == 'How to Play') {
                    _helpPanel = new HelpPanel();
                    _helpPanel.load("help-manantales.html");
                    _helpPanel.width = Math.min(width - 100, 600);
                    _helpPanel.height = height - 20;
                    _helpPanel.addEventListener("close", closeHelp);
                    PopUpManager.addPopUp(_helpPanel, this, true);
                    PopUpManager.centerPopUp(_helpPanel);
                } else if (evt.label=='Lobby') {
                    dispatchCompletion();
                } else if (evt.label == 'Quit') {
                    quitGame();
                    dispatchCompletion();
                }
            }
            
            private function closeHelp(event:Event):void{
                PopUpManager.removePopUp(_helpPanel);
            }

            public function get state():String {
                var ret:String;
                if (_currentGame.mode == null)
                    ret = "Setup";
                else if (_currentGame.mode == Mode.CLASSIC)
                    ret = "Classic";
                else if (_currentGame.mode == Mode.BASIC_PUZZLE)
                    ret = "Puzzle";
                else if (_currentGame.mode == Mode.SILVOPASTORAL)
                    ret = "Silvopastoral";
                else if (_currentGame.mode == Mode.SILVO_PUZZLE)
                    ret = "Advanced Puzzle";
                
                return ret;
            }

            public function stateMenu():XML {
                var xml:XML = <menuitem label={state} />;
                return xml;
            }

            /*
            public function stateMenu():XML {
                var xml:XML = <menuitem label="States">
                    <menuitem label="Setup" type="radio" groupName="states" toggled="{state} == 'Setup'"/>
                    <menuitem label="Classic" type="radio" groupName="states" toggled="{state} == 'Classic'"/>
                    <menuitem label="Puzzle" type="radio" groupName="states" toggled="{state} == 'Puzzle'"/>
                    <menuitem label="Silvopastoral" type="radio" groupName="states" toggled="{state} == 'Silvopastoral'"/>
                    <menuitem label="Advanced Puzzle" type="radio" groupName="states" toggled="{state} == 'Advanced Puzzle'"/>
                    </menuitem>;
                
                return xml;
            }*/

            private function quitGame():void {
                _controller.quitGame(currentPlayer);                 
            }
         ]]>       
    </mx:Script> 

    <mx:XMLList id="menuXML">
        <menuitem label="Game">
            <menuitem label="Lobby"/>
            <menuitem label="Quit"/>
        </menuitem>
        <menuitem label="Help">
            <menuitem label="How to Play"/>
        </menuitem>
    </mx:XMLList>

    <mx:ApplicationControlBar id="controlBar" dock="true" width="100%">
        <mx:MenuBar height="100%" 
            dataProvider="{menuXML}" 
            labelField="@label" 
            showRoot="true"            
            itemClick="handleMenuItemClick(event)"/>
        <mx:MenuBar id="stateMenuBar" dataProvider="{stateMenu()}" labelField="@label" showRoot="true"/>
    </mx:ApplicationControlBar>    
    <mx:states>
        <mx:State name="WAIT">
            <mx:RemoveChild  target="{moveViewer}"/>
        </mx:State>
        <mx:State name="CLASSIC" basedOn="WAIT">
            <mx:AddChild relativeTo="{leftBox}">
                <mx:Panel title="Managed Forest" width="100%" id="mfp">
                    <token:ForestTokenStore id="forestStore"
                        currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}"
                        width="100%"/>
                </mx:Panel>
            </mx:AddChild>
            <mx:AddChild relativeTo="{leftBox}">
                <mx:Panel title="Moderate Grazing" width="100%" id="mgp">
                   <token:ModerateTokenStore id="moderateStore"
                    currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}"
                    width="100%"/>
                </mx:Panel>
            </mx:AddChild>
            <mx:AddChild relativeTo="{leftBox}">
               <mx:Panel title="Intensive Grazing" width="100%" id="igp">
                <token:IntensiveTokenStore id="intensiveStore"
                    currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}"
                    width="100%"/>
               </mx:Panel>
            </mx:AddChild>
        </mx:State>
        <mx:State name="BASIC_PUZZLE" basedOn="CLASSIC" />
        <mx:State name="BASIC_PUZZLE_SOLICIT" basedOn="BASIC_PUZZLE">
            <!-- Solicits suggestions from other players -->
            <mx:RemoveChild target="{mfp}"/>
            <mx:RemoveChild target="{mgp}"/>
            <mx:RemoveChild target="{igp}"/>
            <mx:AddChild relativeTo="{leftBox}">
                <mx:Panel title="Managed Forest" width="100%" id="SBmfp">
                    <token:ForestTokenStore id="SforestStore"
                        currentPlayer="{activePlayer}" tokenSize="{board.tokenSize}"
                        width="100%"/>
                </mx:Panel>
            </mx:AddChild>
            <mx:AddChild relativeTo="{leftBox}">
                <mx:Panel title="Moderate Grazing" width="100%" id="SBmgp">
                   <token:ModerateTokenStore id="SmoderateStore"
                    currentPlayer="{activePlayer}" tokenSize="{board.tokenSize}"
                    width="100%"/>
                </mx:Panel>
            </mx:AddChild>
            <mx:AddChild relativeTo="{leftBox}">
               <mx:Panel title="Intensive Grazing" width="100%" id="SBigp">
                <token:IntensiveTokenStore id="SintensiveStore"
                    currentPlayer="{activePlayer}" tokenSize="{board.tokenSize}"
                    width="100%"/>
               </mx:Panel>
            </mx:AddChild>
        </mx:State>
        <mx:State name="BASIC_PUZZLE_RESPONSE" basedOn="BASIC_PUZZLE">
            <!-- Allows current player to respond to suggestions -->
            <!--
            <mx:AddChild relativeTo="{leftBox}">
                <manantiales:SuggestionViewer id="basicSuggestionViewer" title="Suggested Moves"
                    height="100%" width="100%"/>
            </mx:AddChild>-->
        </mx:State>

        <mx:State name="SILVOPASTORAL" basedOn="CLASSIC">
           <mx:AddChild relativeTo="{leftBox}">
            <mx:Panel title="Silvopastoral Establishment" width="100%" id="sep">
               <token:ViveroTokenStore id="viveroStore"
                currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}"
                width="100%"/>
            </mx:Panel>
           </mx:AddChild>
           <mx:AddChild relativeTo="{leftBox}">
            <mx:Panel title="Silvopastoral Active" width="100%" id="sap">
               <token:SilvopastoralTokenStore id="silvoStore"
                currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}"
                width="100%"/>
            </mx:Panel>
           </mx:AddChild>
        </mx:State>
        <mx:State name="SILVO_PUZZLE" basedOn="SILVOPASTORAL"/>
        <mx:State name="SILVO_PUZZLE_SOLICIT" basedOn="SILVO_PUZZLE">
            <mx:RemoveChild target="{mfp}"/>
            <mx:RemoveChild target="{mgp}"/>
            <mx:RemoveChild target="{igp}"/>
            <mx:RemoveChild target="{sep}"/>
            <mx:RemoveChild target="{sap}"/>            

            <!-- Solicits suggestions from other players -->
            <mx:AddChild relativeTo="{leftBox}">
                <mx:Panel title="Managed Forest" width="100%" id="SVmfp">
                    <token:ForestTokenStore id="SVforestStore"
                        currentPlayer="{activePlayer}" tokenSize="{board.tokenSize}"
                        width="100%"/>
                </mx:Panel>
            </mx:AddChild>
            <mx:AddChild relativeTo="{leftBox}">
                <mx:Panel title="Moderate Grazing" width="100%" id="SVmgp">
                   <token:ModerateTokenStore id="SVmoderateStore"
                    currentPlayer="{activePlayer}" tokenSize="{board.tokenSize}"
                    width="100%"/>
                </mx:Panel>
            </mx:AddChild>
            <mx:AddChild relativeTo="{leftBox}">
               <mx:Panel title="Intensive Grazing" width="100%" id="SVigp">
                <token:IntensiveTokenStore id="SVintensiveStore"
                    currentPlayer="{activePlayer}" tokenSize="{board.tokenSize}"
                    width="100%"/>
               </mx:Panel>
            </mx:AddChild>
            <mx:AddChild relativeTo="{leftBox}">
            <mx:Panel title="Silvopastoral Establishment" width="100%" id="SVsep">
               <token:ViveroTokenStore id="SVviveroStore"
                currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}"
                width="100%"/>
            </mx:Panel>
           </mx:AddChild>
           <mx:AddChild relativeTo="{leftBox}">
            <mx:Panel title="Silvopastoral Active" width="100%" id="SVsap">
               <token:SilvopastoralTokenStore id="SVsilvoStore"
                currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}"
                width="100%"/>
            </mx:Panel>
           </mx:AddChild>
        </mx:State>
        <mx:State name="SILVO_PUZZLE_RESPONSE" basedOn="SILVO_PUZZLE">
            <!-- Allows current player to respond to suggestions -->
            <!--
            <mx:AddChild relativeTo="{leftBox}">
                <manantiales:SuggestionViewer id="silvoSuggestionViewer" title="Suggested Moves"
                    height="100%" width="100%"/>
            </mx:AddChild>
            -->
        </mx:State>
    </mx:states>
    <mx:HBox width="100%" height="100%" paddingTop="10" paddingBottom="10"
        paddingLeft="10" paddingRight="10" id="hbox">
        <mx:VBox id="leftBox" width="200" height="100%">
            <component:GameStatus id="gameStatus" width="100%" />
            <manantiales:MoveViewer id="moveViewer" title="Move History"
                    height="100%" width="100%"/>
        </mx:VBox>
        <mx:VBox id="centerBox" width="100%" height="100%">
            <manantiales:ManantialesBoard id="board" width="100%" height="100%"
                    currentPlayer="{currentPlayer}"/>
        </mx:VBox>
        <mx:VBox id="rightBox" height="100%" width="300">
            <mx:Panel title="Score" width="100%">
                <manantiales:PlayersViewer id="playersViewer" 
                      currentPlayer="{currentPlayer}" width="100%"/>
            </mx:Panel>        
           <component:ChatPanel id="chatPanel" width="100%" height="100%" 
                currentPlayer="{currentPlayer}" currentGame="{currentGame}"/>  
        </mx:VBox>
        <mx:UIComponent id="animateLayer" />
    </mx:HBox>
</mx:VBox>