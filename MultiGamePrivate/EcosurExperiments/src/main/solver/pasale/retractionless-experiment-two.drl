# Copyright (C) 2009 ECOSUR, Andrew Waterman
#
# Licensed under the Academic Free License v. 3.2.
# http://www.opensource.org/licenses/afl-3.0.php
 
package mx.ecosur.multigame.impl.entity.pasale

import java.util.ArrayList;
import java.util.Collection;
import java.util.Set;

import org.drools.planner.core.score.constraint.UnweightedConstraintOccurrence
import org.drools.planner.core.score.calculator.SimpleScoreCalculator;
import mx.ecosur.multigame.impl.model.GridCell;
import mx.ecosur.multigame.impl.entity.pasale.PasaleFicha;
import mx.ecosur.multigame.impl.entity.pasale.PasaleGame;
import mx.ecosur.multigame.impl.enums.pasale.TokenType;

import function mx.ecosur.experiment.multigame.solver.pasale.SolutionFunctions.*;

dialect "java"

global SimpleScoreCalculator scoreCalculator;


# Soft constraints

# 40 tokens over an entire 4x4 board must be Potreros (40/(16 * 4) = Potrero)
rule "62.5% Potreros"
    no-loop true
    when
        PasaleGame ($grid :  grid)
        $potreros : ArrayList (size != (size * 0.625)) from
            collect ( PasaleFicha (type == TokenType.POTRERO)
                )
    then
        insertLogical (
            new UnweightedConstraintOccurrence("Not 62.5% Potrero", $potreros));
end

#24 Forest tokens over a 4x4 board (24/(16 * 4) = Forest)
rule "37.5% Forests"
    when
        PasaleGame ($size : grid.cells.size)
        $forests : ArrayList (size != (size * 0.375)) from
            collect (
                PasaleFicha (type == TokenType.FOREST))
    then
        insertLogical (
            new UnweightedConstraintOccurrence("Not 37.5% Forest", $forests));
end

#16 of the 40 potreros must be directly connected to  water (16/40 = directly connected)
rule "25% Potreros directly connected to water"
     when
        PasaleGame ($grid : grid, $size : grid.cells.size)
        $potreros : ArrayList (size > 0) from
            collect ( PasaleFicha (type == TokenType.POTRERO))
        eval (percentageDirectlyConnected ((PasaleGrid) $grid, (Collection) $potreros, 0.25))
    then
        insertLogical (
            new UnweightedConstraintOccurrence("Not 25% Potreros directly connected to water", $potreros));
end

#Constraint calculator update
rule "Constraints broken"
    when
        $occurrenceCount : Number() from accumulate (
            $unweightedConstraintOccurrence : UnweightedConstraintOccurrence(),
            count($unweightedConstraintOccurrence)
        );
    then
        scoreCalculator.setScore(- $occurrenceCount.intValue() );
        System.out.println ("Score: " + $occurrenceCount.intValue());
end