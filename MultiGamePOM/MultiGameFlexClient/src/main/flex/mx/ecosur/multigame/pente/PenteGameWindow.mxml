<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:component="mx.ecosur.multigame.component.*" 
	xmlns:pente="mx.ecosur.multigame.pente.*" 
	width="100%" height="100%" creationComplete="init()">
    
    <mx:Metadata>
        [Event(name="complete")]
    </mx:Metadata>
    
    <mx:Script> 
        <![CDATA[
        	import mx.core.Application;
        	import mx.managers.PopUpManager;
        	import mx.ecosur.multigame.component.HelpPanel;
        	import mx.controls.Alert;
        	import mx.events.ResizeEvent;
            import mx.events.MenuEvent; 
            import mx.collections.ArrayCollection;
            import flash.net.URLLoader;
            
            import mx.ecosur.multigame.entity.Game;
            import mx.ecosur.multigame.entity.Move;
            import mx.ecosur.multigame.entity.GamePlayer;
            import mx.ecosur.multigame.entity.ChatMessage;
            import mx.ecosur.multigame.pente.entity.PenteGame;
            
            private var _controller:PenteGameController;
            private var _currentPlayer:GamePlayer;
            private var _helpPanel:HelpPanel;
            
            //TODO: Find efficient way to pass rows and columns to penteBoard as initial parameters
            [Bindable]
            public var rows:int;
            [Bindable]
            public var columns:int;
            
            public function set currentPlayer(currentPlayer:GamePlayer):void{
                _currentPlayer = currentPlayer;
            }
            
            [Bindable]
            public function get currentPlayer():GamePlayer{
                return _currentPlayer;
            }
            
            public function reload(event:Event):void {
            	// do nothing
            }
             
            public function init():void{
                _controller = new PenteGameController(_currentPlayer, board, chatPanel, playersViewer, tokenStore, gameStatus, moveViewer, animateLayer);
            }
            
            /* Only events that effect this container are handled, all others
               relevent to application lifecycle should be listend to by 
               Parent containers (event-bubbling) */
            private function handleMenuItemClick(evt:MenuEvent):void { 
                if (evt.label == 'How to Play') {
                	_helpPanel = new HelpPanel();
                	_helpPanel.load("help-gente.html");
                	_helpPanel.width = Math.min(width - 100, 600);
                	_helpPanel.height = height - 20;
                	_helpPanel.addEventListener("close", closeHelp);
                	PopUpManager.addPopUp(_helpPanel, this, true);
                	PopUpManager.centerPopUp(_helpPanel);
                } else if (evt.label=='Lobby') {
                    this.dispatchEvent(new Event("complete"));
                }
            }
            
            private function closeHelp(event:Event):void{
            	PopUpManager.removePopUp(_helpPanel);
            }
            
        ]]>
    </mx:Script>
    
    <mx:XMLList id="menuXML">
        <menuitem label="Game">
        	<menuitem label="Lobby"/>
        </menuitem>
        <menuitem label="Help">
            <menuitem label="How to Play"/>
        </menuitem>
    </mx:XMLList>

    <mx:ApplicationControlBar id="controlBar" dock="true" width="100%">
        <mx:MenuBar height="100%" 
            dataProvider="{menuXML}" 
            labelField="@label" 
            showRoot="true"
            itemClick="handleMenuItemClick(event)"/>
    </mx:ApplicationControlBar>
    
    <mx:HBox width="100%" height="100%" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">
		<mx:VBox id="leftBox" width="200" height="100%">
	        <component:GameStatus id="gameStatus" width="100%" />   
	        <component:TokenStore id="tokenStore" currentPlayer="{currentPlayer}" tokenSize="{board.tokenSize}" width="100%"/>
	        <pente:PenteMoveViewer id="moveViewer" title="Move History" width="100%" height="100%"/>
	    </mx:VBox>
	    <mx:VBox id="centerBox" width="100%" height="100%">
	        <pente:PenteBoard id="board" width="100%" height="100%" nRows="19" nCols="19"/>
	    </mx:VBox>
	    <mx:VBox id="rightBox" height="100%" width="300">
	        <mx:Panel title="Players" width="100%">
	            <pente:PentePlayersViewer id="playersViewer" width="100%" />
	        </mx:Panel>
	        <component:ChatPanel id="chatPanel" width="100%" height="100%" currentPlayer="{currentPlayer}" />
	    </mx:VBox>
	    <mx:UIComponent id="animateLayer" />
	</mx:HBox>
</mx:VBox>